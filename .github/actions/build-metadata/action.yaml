name: "Build Metadata"
description: "Build metada"

inputs:
  flavor:
    description: "Base image"
    required: true
    default: "base"
  version:
    description: "Etebase Version"
    default: "master"
    required: true

outputs:
  source_name:
    description: "Source Ref"
    value: ${{ steps.prepare_metadata.outputs.source_ref }}
  suffix:
    description: "Suffix for Docker Tags"
    value: ${{ steps.prepare_metadata.outputs.suffix }}
  base_version:
    description: "Base Docker Image Version"
    value: ${{ steps.prepare_metadata.outputs.base_version }}
  dckr_version:
    description: "Docker Image Version"
    value: ${{ steps.prepare_metadata.outputs.dckr_version }}
  ete_version:
    description: "Etebase Version"
    value: ${{ steps.prepare_metadata.outputs.ete_version }}
  semver: 
    description: "If version is a valid SEMVER"
    value: ${{ steps.get_git_data.outputs.semver }}

runs:
  using: "composite"
  steps:
    - id: prepare_metadata
      shell: bash
      env:
        FLAVOR: ${{ inputs.flavor }}
        ETE_VERSION: ${{ inputs.version }}
      run: |
        FLAVOR="${FLAVOR:-base}"
        SEMVER='false'
        SUFFIX=""
        VERSION=${ETE_VERSION#v}
        SOURCE_REF="${GITHUB_REF_NAME}"

        if [[ ${ETE_VERSION#v} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          SEMVER='true'
        fi

        if [ ! -z "${FLAVOR}" ] && [ "${FLAVOR}" != "base" ]; then
          SUFFIX="-${FLAVOR}"
        fi

        if [ "${GITHUB_REF_TYPE}" == 'branch' ] || [ "${GITHUB_REF_TYPE}" == 'tag' ]; then
          VERSION="${VERSION}-${GITHUB_REF_NAME}"
        else
          declare CLEAR="${GITHUB_REF%/merge}"
          CLEAR="${CLEAR#refs/*/}"

          VERSION="${VERSION}-${CLEAR}"
          SOURCE_REF="master-${CLEAR}"
        fi

        VERSION="${VERSION}${SUFFIX}"

        BASE_VERSION=`grep "FROM python:" tags/${FLAVOR}/Dockerfile | cut -d ' ' -f 2`

        echo ::set-output name=source_ref::${SOURCE_REF}
        echo ::set-output name=suffix::${SUFFIX}
        echo ::set-output name=base_version::${BASE_VERSION}
        echo ::set-output name=dckr_version::${VERSION}
        echo ::set-output name=ete_version::${ETE_VERSION}
        echo ::set-output name=semver::${SEMVER}