---
name: Test Metadata Actions for Dispatch Build 

on: 
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to Checkout'
        required: false
        default: 'release'
      baseimg:
        description: 'Set the base image [base, slim or alpine]'
        required: false
        default: 'base'
      version:
        description: 'EteBase Version'
        required: false
        default: 'master'
      platforms:
        description: 'Set the platforms to build [ linux/amd64, linux/arm64 or linux/arm/v7 ]'
        required: false
        default: 'linux/amd64,linux/arm64,linux/arm/v7'
      pushit:
        description: 'Should push?'
        required: false
        default: 'false'
      only_edge:
        description: 'Push only edge tag?'
        required: false
        default: 'true'

jobs:
  test-metada:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Dockerfiles and Context
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - id: build_metadata
        uses: ./.github/actions/build-metadata
        with:
          baseimg: ${{ github.event.inputs.baseimg }}
          version: ${{ github.event.inputs.version }}

      - id: docker_metadata
        uses: docker/metadata-action@v3.6.1
        with:
          labels: |
            maintainer=victor-rds
            org.opencontainers.image.authors='Victor R. Santos <victor-rds@users.noreply.github.com>'
          images: |
            victorrds/etebase
            victorrds/etesync
          flavor: |
            latest=${{ ( contains(github.event.inputs.baseimg, 'base') && contains(github.event.inputs.only_edge, 'false') ) }}
            suffix=${{ steps.build_metadata.outputs.suffix }}
          tags: |
            type=edge,enable=${{ contains(github.event.inputs.only_edge, 'true') }},branch=${{ github.event.inputs.branch }}
            type=raw,value=${{ github.event.inputs.baseimg }},suffix=,enable=${{ contains(github.event.inputs.only_edge, 'false') }}
            type=semver,pattern={{version}},value=${{ steps.build_metadata.outputs.version }},enable=${{ contains(github.event.inputs.only_edge, 'false') }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.build_metadata.outputs.version }},enable=${{ contains(github.event.inputs.only_edge, 'false') }}