---
name: Build and Push

on: 
  workflow_dispatch:
    inputs:
      ref:
        description: 'Branch to Checkout'
        required: false
        default: 'release'
      baseimg:
        description: 'Set the base image [base, slim or alpine]'
        required: false
        default: 'base'
      version:
        description: 'EteBase Version'
        required: false
        default: 'stable'
      platforms:
        description: 'Set the platforms to build [ linux/amd64, linux/arm64 or linux/arm/v7 ]'
        required: false
        default: 'linux/amd64,linux/arm64,linux/arm/v7'
      tag:
        description: 'Tag'
        required: false
        default: ''
      pushit:
        description: 'Should push?'
        required: false
        default: 'false'

jobs:
  dispatch-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Dockerfiles and Context
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.ref }}

      - id: build_metadata
        uses: ./.github/actions/stable-metadata
        with:
          baseimg: ${{ github.event.inputs.baseimg }}
          version: ${{ github.event.inputs.version }}

      - id: docker_metadata
        uses: docker/metadata-action@v3.6.2
        with:
          labels: |
            maintainer=victor-rds
            org.opencontainers.image.authors='Victor R. Santos <victor-rds@users.noreply.github.com>'
          images: |
            victorrds/etebase
            victorrds/etesync
          flavor: |
            latest=${{ ( github.event.inputs.baseimg == 'base' && github.event.inputs.version == 'stable' ) }}
            suffix=${{ steps.build_metadata.outputs.suffix }}
          tags: |
            type=edge,enable=${{ github.event.inputs.tag == 'edge' }},branch=${{ steps.build_metadata.outputs.source_name }}
            type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event.inputs.tag != '' && github.event.inputs.tag != 'edge' }}
            type=raw,value=${{ github.event.inputs.baseimg }},suffix=,enable=${{ github.event.inputs.tag == '' && steps.build_metadata.outputs.semver == 'true' }}
            type=semver,pattern={{version}},value=${{ steps.build_metadata.outputs.ete_version }},enable=${{ github.event.inputs.tag == '' && steps.build_metadata.outputs.semver == 'true' }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.build_metadata.outputs.ete_version }},enable=${{ github.event.inputs.tag == '' && steps.build_metadata.outputs.semver == 'true' }}

      - name: Set up QEMU
        if: contains(github.event.inputs.platforms, 'linux/arm')
        uses: docker/setup-qemu-action@v1.2.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Login to DockerHub
        if: github.event.inputs.pushit == 'true'
        uses: docker/login-action@v1.14.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker Build and Push
        id: docker_build_push
        uses: docker/build-push-action@v2.9.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          platforms: ${{ github.event.inputs.platforms }}
          context: .
          file: ./tags/${{ github.event.inputs.baseimg }}/Dockerfile
          build-args: ETE_VERSION=${{ steps.build_metadata.outputs.ete_version }}
          tags: ${{ steps.docker_metadata.outputs.tags }}
          labels: ${{ steps.docker_metadata.outputs.labels }}
          push: ${{ github.event.inputs.pushit == 'true' }}