---
name: Dispatch Build 

on: 
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to Checkout'
        required: false
        default: 'dev'
      baseimg:
        description: 'Set the base image [base, slim or alpine]'
        required: false
        default: 'base'
      version:
        description: 'EteBase Version'
        required: false
        default: 'dev'
      platforms:
        description: 'Set the platforms to build [ linux/amd64, linux/arm64, linux/arm/v7 or linux/arm/v6]'
        required: false
        default: 'linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6'
      pushit:
        description: 'Should push?'
        required: false
        default: 'false'

jobs:
  dispatch-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Dockerfiles and Context
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - id: pushit_to_json
        name: Cast value to JSON to preserve Boolean
        shell: bash
        run: |
          if [ "${{ github.event.inputs.pushit }}" = "true" ]; then
            echo ::set-output name=boolean::${{ toJSON(true) }}
          else
            echo ::set-output name=boolean::${{ toJSON(false) }}
          fi

      - id: build_metadata
        uses: ./.github/actions/build-metadata
        with:
          baseimg: ${{ github.event.inputs.baseimg }}
          version: ${{ github.event.inputs.version }}

      - id: docker_metadata
        uses: docker/metadata-action@v3.4.1
        with:
          labels: |
            maintainer=victor-rds
            org.opencontainers.image.authors='Victor R. Santos <victor-rds@users.noreply.github.com>'
          images: |
            victorrds/etebase
            victorrds/etesync
          flavor: |
            latest=false
            suffix=${{ steps.build_metadata.outputs.suffix }}
          tags: |
            type=edge,branch=dev
            type=raw,value=${{  github.event.inputs.baseimg }},suffix=
            type=semver,pattern={{version}},value=${{ steps.build_metadata.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.build_metadata.outputs.version }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.5.1

      - name: Login to DockerHub
        if: fromJSON(steps.pushit_to_json.outputs.boolean)
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker Build and Push
        id: docker_build_push
        uses: docker/build-push-action@v2.6.1
        with:
          builder: ${{ steps.buildx.outputs.name }}
          platforms: ${{ github.event.inputs.platforms }}
          context: .
          file: ./tags/${{ github.event.inputs.baseimg }}/Dockerfile
          build-args: ETE_VERSION=${{ steps.build_metadata.outputs.ete_version }}
          tags: ${{ steps.docker_metadata.outputs.tags }}
          labels: ${{ steps.docker_metadata.outputs.labels }}
          push: ${{ fromJSON(steps.pushit_to_json.outputs.boolean) }} 